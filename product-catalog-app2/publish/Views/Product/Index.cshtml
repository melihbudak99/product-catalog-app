@model IEnumerable<product_catalog_app.src.models.Product>
@using ProductCatalogApp.Helpers

@{
    ViewData["Title"] = "Ürün Kataloğu";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var totalCount = ViewBag.TotalCount ?? 0;
    var pageSize = ViewBag.PageSize ?? 50;
    var search = ViewBag.Search as string ?? "";
    var category = ViewBag.Category as string ?? "";
    var brand = ViewBag.Brand as string ?? "";
    var status = ViewBag.Status as string ?? "";
    var material = ViewBag.Material as string ?? "";
    var color = ViewBag.Color as string ?? "";
    var eanCode = ViewBag.EanCode as string ?? "";
    var minWeight = ViewBag.MinWeight as decimal?;
    var maxWeight = ViewBag.MaxWeight as decimal?;
    var minDesi = ViewBag.MinDesi as decimal?;
    var maxDesi = ViewBag.MaxDesi as decimal?;
    var minWarranty = ViewBag.MinWarranty as int?;
    var maxWarranty = ViewBag.MaxWarranty as int?;
    var sortBy = ViewBag.SortBy as string ?? "updated";
    var sortDirection = ViewBag.SortDirection as string ?? "desc";
    var hasImage = ViewBag.HasImage as bool?;
    var hasEan = ViewBag.HasEan as bool?;
    var hasBarcode = ViewBag.HasBarcode as bool?;
    var barcodeType = ViewBag.BarcodeType as string ?? "";
    var isArchivePage = ViewBag.IsArchivePage as bool? ?? false;
    
    // Header için parametreler - Premium header ile kategori yönetimi gibi boyutlar
    ViewBag.HeaderType = "premium";
    if (isArchivePage)
    {
        ViewBag.HeaderTitle = "Arşivlenmiş Ürünler";
        ViewBag.HeaderSubtitle = $"{totalCount} ürün - Sayfa {currentPage}/{totalPages}";
        ViewBag.HeaderIcon = "fas fa-archive";
        ViewBag.HeaderStats = new[] {
            new { Type = "secondary", Icon = "fas fa-archive", Value = totalCount, Label = "Arşiv Ürün" },
            new { Type = "primary", Icon = "fas fa-layer-group", Value = totalPages, Label = "Toplam Sayfa" },
            new { Type = "accent", Icon = "fas fa-list", Value = pageSize, Label = "Sayfa Başına" }
        };
    }
    else
    {
        ViewBag.HeaderTitle = "Ürün Kataloğu";
        ViewBag.HeaderSubtitle = $"Ürünlerinizi görüntüleyin, arayın ve yönetin • {(sortBy == "updated" ? (sortDirection == "desc" ? "📅 Son güncellenen önce" : "📅 Eski güncellenen önce") : sortBy == "name" ? "🔤 Alfabetik sıralama" : "🆔 ID sıralaması")}";
        ViewBag.HeaderIcon = "fas fa-cube";
        ViewBag.HeaderStats = new[] {
            new { Type = "primary", Icon = "fas fa-cube", Value = totalCount, Label = "Toplam Ürün" },
            new { Type = "secondary", Icon = "fas fa-layer-group", Value = totalPages, Label = "Toplam Sayfa" },
            new { Type = "accent", Icon = "fas fa-list", Value = pageSize, Label = "Sayfa Başına" }
        };
    }
}

<div class="container product-index-page">
    <!-- Ortak Header Component -->
    @await Html.PartialAsync("_PageHeader")
    
    @if (totalCount == 0)
    {
        @if (string.IsNullOrEmpty(search) && string.IsNullOrEmpty(category) && string.IsNullOrEmpty(brand))
        {
            <!-- Hiç ürün yok -->
            <div class="empty-state">
                <i class="fas fa-cube empty-icon"></i>
                <h2>Henüz hiç ürün eklenmemiş</h2>
                <p>Kataloğunuzu oluşturmaya başlayın! İlk ürününüzü ekleyerek başlayabilirsiniz.</p>
                <div class="empty-actions">
                    <a href="@Url.Action("CreateProduct")" class="btn btn-primary btn-large">
                        <i class="fas fa-plus"></i>
                        İlk Ürünü Ekle
                    </a>
                    <a href="@Url.Action("XmlManager")" class="btn btn-secondary">
                        <i class="fas fa-file-code"></i>
                        XML Yönetimi
                    </a>
                </div>
            </div>
        }
        else
        {
            <!-- Arama sonucunda ürün bulunamadı -->
            <div class="empty-state no-results">
                <i class="fas fa-search empty-icon"></i>
                <h2>Arama sonucunda ürün bulunamadı</h2>
                <p>
                    @if (!string.IsNullOrEmpty(search))
                    {
                        @:<strong>"@search"</strong> araması için sonuç bulunamadı.
                    }
                    @if (!string.IsNullOrEmpty(category))
                    {
                        @:<br><strong>@category</strong> kategorisinde ürün yok.
                    }
                    @if (!string.IsNullOrEmpty(brand))
                    {
                        @:<br><strong>@brand</strong> markasında ürün yok.
                    }
                </p>
                <div class="no-results-actions">
                    <a href="@Url.Action("Index")" class="btn btn-primary">
                        <i class="fas fa-eraser"></i>
                        Filtreleri Temizle
                    </a>
                    <a href="@Url.Action("CreateProduct")" class="btn btn-secondary">
                        <i class="fas fa-plus"></i>
                        Yeni Ürün Ekle
                    </a>
                </div>
                
                <!-- Arama önerileri -->
                <div class="search-help-suggestions">
                    <h4><i class="fas fa-lightbulb"></i> Arama önerileri:</h4>
                    <ul>
                        <li>Farklı kelimeler kullanmayı deneyin</li>
                        <li>Daha genel terimler kullanın</li>
                        <li>Yazım hatası olup olmadığını kontrol edin</li>
                        <li>Filtreleri kaldırıp tekrar arayın</li>
                    </ul>
                </div>
            </div>
        }
    }
    else
    {
        <!-- İstatistik Kartları -->
        <div class="stats-section">
            <div class="stats-cards">
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-cube"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@totalCount</h3>
                        <p>Toplam Ürün</p>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-tags"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@(ViewBag.Categories?.Count ?? 0)</h3>
                        <p>Kategori</p>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-building"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@(ViewBag.Brands?.Count ?? 0)</h3>
                        <p>Marka</p>
                    </div>
                </div>
                <div class="stat-card">
                    <div class="stat-icon">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="stat-content">
                        <h3>@(Math.Round((double)totalCount / Math.Max(1, totalPages), 1))</h3>
                        <p>Ortalama/Sayfa</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gelişmiş Arama ve Filtreleme -->
        <div class="search-filter-section">
            <div class="search-filter-header">
                <h3><i class="fas fa-search"></i> Arama ve Filtreleme</h3>
                <button type="button" class="btn-toggle-advanced" id="advancedSearchToggle">
                    <i class="fas fa-cogs"></i> Gelişmiş Arama ▼
                </button>
            </div>
            
            <form asp-action="@(isArchivePage ? "Archive" : "Index")" method="get" class="filter-form" id="searchForm">
                <div class="search-main">
                    <div class="search-box">
                        <i class="fas fa-search search-icon"></i>
                        <input type="text" name="search" value="@search" id="searchInput" 
                               placeholder="Ürün adı, marka, SKU, EAN, materyal, renk ile gelişmiş arama..." 
                               class="search-input"
                               autocomplete="off" />
                        <div class="search-suggestions hidden" id="searchSuggestions"></div>
                    </div>
                    <div class="search-actions">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                            Ara
                        </button>
                        <button type="button" class="btn btn-outline" data-action="clear-filters">
                            <i class="fas fa-broom"></i>
                            Temizle
                        </button>
                    </div>
                </div>
                
                <div class="filter-options">
                    <div class="filter-group">
                        <label>Kategori</label>
                        <select name="category" class="filter-select">
                            <option value="">Tüm Kategoriler</option>
                            @if (ViewBag.Categories != null)
                            {
                                @foreach (var cat in (List<string>)ViewBag.Categories)
                                {
                                    <option value="@cat" selected="@(category == cat)">@cat</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>Marka</label>
                        <select name="brand" class="filter-select">
                            <option value="">Tüm Markalar</option>
                            @if (ViewBag.Brands != null)
                            {
                                @foreach (var b in (List<string>)ViewBag.Brands)
                                {
                                    <option value="@b" selected="@(brand == b)">@b</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="filter-group">
                        <label>Sayfa Boyutu</label>
                        <select name="pageSize" class="filter-select" data-auto-submit="true">
                            <option value="25" selected="@(pageSize == 25)">25 ürün</option>
                            <option value="50" selected="@(pageSize == 50)">50 ürün</option>
                            <option value="100" selected="@(pageSize == 100)">100 ürün</option>
                            <option value="200" selected="@(pageSize == 200)">200 ürün</option>
                        </select>
                    </div>
                </div>
                
                <div class="advanced-filters hidden" id="advancedFilters">
                    <div class="advanced-filter-row">
                        <div class="filter-group">
                            <label>Durum</label>
                            <select name="status" class="filter-select">
                                <option value="">Tüm Durumlar</option>
                                <option value="active" selected="@(ViewBag.Status == "active")">Aktif</option>
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>Malzeme</label>
                            <select name="material" class="filter-select">
                                <option value="">Tüm Malzemeler</option>
                                @if (ViewBag.Materials != null)
                                {
                                    @foreach (var mat in (List<string>)ViewBag.Materials)
                                    {
                                        <option value="@mat" selected="@(ViewBag.Material == mat)">@mat</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>Renk</label>
                            <select name="color" class="filter-select">
                                <option value="">Tüm Renkler</option>
                                @if (ViewBag.Colors != null)
                                {
                                    @foreach (var col in (List<string>)ViewBag.Colors)
                                    {
                                        <option value="@col" selected="@(ViewBag.Color == col)">@col</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="advanced-filter-row">
                        <div class="filter-group">
                            <label>EAN Kodu</label>
                            <input type="text" name="eanCode" value="@eanCode" class="filter-input" placeholder="EAN kodu arayın..." />
                        </div>
                        <div class="filter-group">
                            <label>Min Ağırlık (kg)</label>
                            <input type="number" name="minWeight" value="@minWeight" step="0.01" class="filter-input" placeholder="Min ağırlık..." />
                        </div>
                        <div class="filter-group">
                            <label>Max Ağırlık (kg)</label>
                            <input type="number" name="maxWeight" value="@maxWeight" step="0.01" class="filter-input" placeholder="Max ağırlık..." />
                        </div>
                    </div>
                    <div class="advanced-filter-row">
                        <div class="filter-group">
                            <label>Min Desi</label>
                            <input type="number" name="minDesi" value="@minDesi" step="0.01" class="filter-input" placeholder="Min desi..." />
                        </div>
                        <div class="filter-group">
                            <label>Max Desi</label>
                            <input type="number" name="maxDesi" value="@maxDesi" step="0.01" class="filter-input" placeholder="Max desi..." />
                        </div>
                        <div class="filter-group">
                            <label>Sıralama</label>
                            <select name="sortBy" class="filter-select">
                                @if(sortBy == "name") {
                                    <option value="name" selected>Ürün Adı</option>
                                } else {
                                    <option value="name">Ürün Adı</option>
                                }
                                @if(sortBy == "brand") {
                                    <option value="brand" selected>Marka</option>
                                } else {
                                    <option value="brand">Marka</option>
                                }
                                @if(sortBy == "category") {
                                    <option value="category" selected>Kategori</option>
                                } else {
                                    <option value="category">Kategori</option>
                                }
                                @if(sortBy == "sku") {
                                    <option value="sku" selected>SKU</option>
                                } else {
                                    <option value="sku">SKU</option>
                                }
                                @if(sortBy == "weight") {
                                    <option value="weight" selected>Ağırlık</option>
                                } else {
                                    <option value="weight">Ağırlık</option>
                                }
                                @if(sortBy == "desi") {
                                    <option value="desi" selected>Desi</option>
                                } else {
                                    <option value="desi">Desi</option>
                                }
                                @if(sortBy == "warranty") {
                                    <option value="warranty" selected>Garanti</option>
                                } else {
                                    <option value="warranty">Garanti</option>
                                }
                                @if(sortBy == "created") {
                                    <option value="created" selected>Oluşturulma Tarihi</option>
                                } else {
                                    <option value="created">Oluşturulma Tarihi</option>
                                }
                                @if(sortBy == "updated") {
                                    <option value="updated" selected>📅 Son Güncelleme Tarihi (Önerilen)</option>
                                } else {
                                    <option value="updated">📅 Son Güncelleme Tarihi (Önerilen)</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="advanced-filter-row">
                        <div class="filter-group">
                            <label>Sıralama Yönü</label>
                            <select name="sortDirection" class="filter-select">
                                @if(sortDirection == "asc") {
                                    <option value="asc" selected>Artan</option>
                                } else {
                                    <option value="asc">Artan</option>
                                }
                                @if(sortDirection == "desc") {
                                    <option value="desc" selected>Azalan</option>
                                } else {
                                    <option value="desc">Azalan</option>
                                }
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>Görsel Durumu</label>
                            <select name="hasImage" class="filter-select">
                                <option value="">Hepsi</option>
                                @if(hasImage == true) {
                                    <option value="true" selected>Görselli</option>
                                } else {
                                    <option value="true">Görselli</option>
                                }
                                @if(hasImage == false) {
                                    <option value="false" selected>Görselsiz</option>
                                } else {
                                    <option value="false">Görselsiz</option>
                                }
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>EAN Durumu</label>
                            <select name="hasEan" class="filter-select">
                                <option value="">Hepsi</option>
                                @if(hasEan == true) {
                                    <option value="true" selected>EAN'li</option>
                                } else {
                                    <option value="true">EAN'li</option>
                                }
                                @if(hasEan == false) {
                                    <option value="false" selected>EAN'sız</option>
                                } else {
                                    <option value="false">EAN'sız</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="advanced-filter-row">
                        <div class="filter-group">
                            <label>Barkod Durumu</label>
                            <select name="hasBarcode" class="filter-select">
                                <option value="">Hepsi</option>
                                @if(hasBarcode == true) {
                                    <option value="true" selected>Barkodlu</option>
                                } else {
                                    <option value="true">Barkodlu</option>
                                }
                                @if(hasBarcode == false) {
                                    <option value="false" selected>Barkodsuz</option>
                                } else {
                                    <option value="false">Barkodsuz</option>
                                }
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>Barkod Türü</label>
                            <select name="barcodeType" class="filter-select" id="barcodeType">
                                <option value="">Tüm Barkod Türleri</option>
                                @if(barcodeType == "any") {
                                    <option value="any" selected>Herhangi Bir Barkod</option>
                                } else {
                                    <option value="any">Herhangi Bir Barkod</option>
                                }
                                <optgroup label="Trendyol">
                                    @if(barcodeType == "trendyol") {
                                        <option value="trendyol" selected>Trendyol</option>
                                    } else {
                                        <option value="trendyol">Trendyol</option>
                                    }
                                </optgroup>
                                <optgroup label="Hepsiburada">
                                    @if(barcodeType == "hepsiburada") {
                                        <option value="hepsiburada" selected>Hepsiburada</option>
                                    } else {
                                        <option value="hepsiburada">Hepsiburada</option>
                                    }
                                    @if(barcodeType == "hepsiburada_seller") {
                                        <option value="hepsiburada_seller" selected>Hepsiburada Satıcı</option>
                                    } else {
                                        <option value="hepsiburada_seller">Hepsiburada Satıcı</option>
                                    }
                                    @if(barcodeType == "hepsiburada_tedarik") {
                                        <option value="hepsiburada_tedarik" selected>Hepsiburada Tedarik</option>
                                    } else {
                                        <option value="hepsiburada_tedarik">Hepsiburada Tedarik</option>
                                    }
                                </optgroup>
                                <optgroup label="Koçtaş">
                                    @if(barcodeType == "koctas") {
                                        <option value="koctas" selected>Koçtaş</option>
                                    } else {
                                        <option value="koctas">Koçtaş</option>
                                    }
                                    @if(barcodeType == "koctas_istanbul") {
                                        <option value="koctas_istanbul" selected>Koçtaş İstanbul</option>
                                    } else {
                                        <option value="koctas_istanbul">Koçtaş İstanbul</option>
                                    }
                                    @if(barcodeType == "koctas_ean") {
                                        <option value="koctas_ean" selected>Koçtaş EAN</option>
                                    } else {
                                        <option value="koctas_ean">Koçtaş EAN</option>
                                    }
                                    @if(barcodeType == "koctas_ean_istanbul") {
                                        <option value="koctas_ean_istanbul" selected>Koçtaş EAN İstanbul</option>
                                    } else {
                                        <option value="koctas_ean_istanbul">Koçtaş EAN İstanbul</option>
                                    }
                                </optgroup>
                                <optgroup label="PTT">
                                    @if(barcodeType == "pttavm") {
                                        <option value="pttavm" selected>PTT AVM</option>
                                    } else {
                                        <option value="pttavm">PTT AVM</option>
                                    }
                                    @if(barcodeType == "ptt_urun_stok") {
                                        <option value="ptt_urun_stok" selected>PTT Ürün ID</option>
                                    } else {
                                        <option value="ptt_urun_stok">PTT Ürün ID</option>
                                    }
                                </optgroup>
                                <optgroup label="N11">
                                    @if(barcodeType == "n11") {
                                        <option value="n11" selected>N11 (Tümü)</option>
                                    } else {
                                        <option value="n11">N11 (Tümü)</option>
                                    }
                                    @if(barcodeType == "n11_catalog") {
                                        <option value="n11_catalog" selected>N11 Katalog ID</option>
                                    } else {
                                        <option value="n11_catalog">N11 Katalog ID</option>
                                    }
                                    @if(barcodeType == "n11_product") {
                                        <option value="n11_product" selected>N11 Ürün Kodu</option>
                                    } else {
                                        <option value="n11_product">N11 Ürün Kodu</option>
                                    }
                                </optgroup>
                                <optgroup label="Diğer Pazaryerleri">
                                    @if(barcodeType == "amazon") {
                                        <option value="amazon" selected>Amazon</option>
                                    } else {
                                        <option value="amazon">Amazon</option>
                                    }
                                    @if(barcodeType == "pazarama") {
                                        <option value="pazarama" selected>Pazarama</option>
                                    } else {
                                        <option value="pazarama">Pazarama</option>
                                    }
                                    @if(barcodeType == "haceyapi") {
                                        <option value="haceyapi" selected>Haceyapı</option>
                                    } else {
                                        <option value="haceyapi">Haceyapı</option>
                                    }
                                </optgroup>
                                <optgroup label="Yedek Barkodlar">
                                    @if(barcodeType == "spare1") {
                                        <option value="spare1" selected>1. Yedek Barkod</option>
                                    } else {
                                        <option value="spare1">1. Yedek Barkod</option>
                                    }
                                    @if(barcodeType == "spare2") {
                                        <option value="spare2" selected>2. Yedek Barkod</option>
                                    } else {
                                        <option value="spare2">2. Yedek Barkod</option>
                                    }
                                    @if(barcodeType == "spare3") {
                                        <option value="spare3" selected>3. Yedek Barkod</option>
                                    } else {
                                        <option value="spare3">3. Yedek Barkod</option>
                                    }
                                    @if(barcodeType == "spare4") {
                                        <option value="spare4" selected>4. Yedek Barkod</option>
                                    } else {
                                        <option value="spare4">4. Yedek Barkod</option>
                                    }
                                </optgroup>
                                <optgroup label="Özel Barkodlar">
                                    @if(barcodeType == "logo") {
                                        <option value="logo" selected>Logo Barkodları</option>
                                    } else {
                                        <option value="logo">Logo Barkodları</option>
                                    }
                                </optgroup>
                            </select>
                        </div>
                        <div class="filter-group">
                            <label>Min Garanti (ay)</label>
                            <input type="number" name="minWarranty" value="@minWarranty" class="filter-input" placeholder="Min garanti..." />
                        </div>
                    </div>
                    <div class="advanced-filter-row">
                        <div class="filter-group">
                            <label>Max Garanti (ay)</label>
                            <input type="number" name="maxWarranty" value="@maxWarranty" class="filter-input" placeholder="Max garanti..." />
                        </div>
                        <div class="filter-group">
                            <button type="submit" class="btn btn-success btn-large">
                                <i class="fas fa-filter"></i> Filtreleri Uygula
                            </button>
                        </div>
                        <div class="filter-group">
                            <a href="@Url.Action(isArchivePage ? "Archive" : "Index")" class="btn btn-outline btn-large">
                                <i class="fas fa-refresh"></i> Filtreleri Sıfırla
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>

        <!-- Bulk Actions Panel -->
        <div id="bulkActionsPanel" class="bulk-actions-panel" style="display: none;">
            <div class="bulk-actions-content">
                <span class="selected-count">0 ürün seçildi</span>
                <div class="bulk-buttons">
                    @if (isArchivePage)
                    {
                        <button type="button" class="btn btn-success" data-action="bulk-unarchive">
                            <i class="fas fa-box-open"></i>
                            Arşivden Çıkar
                        </button>
                        <button type="button" class="btn btn-danger" data-action="bulk-delete">
                            <i class="fas fa-trash"></i>
                            Kalıcı Sil
                        </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-info" data-action="bulk-archive">
                            <i class="fas fa-archive"></i>
                            Arşivle
                        </button>
                        <button type="button" class="btn btn-danger" data-action="bulk-delete">
                            <i class="fas fa-trash"></i>
                            Sil
                        </button>
                    }
                    <button type="button" class="btn btn-success" data-action="export-excel">
                        <i class="fas fa-file-excel"></i>
                        Excel'e Aktar
                    </button>
                    <button type="button" class="btn btn-outline" data-action="clear-selection">
                        <i class="fas fa-times-circle"></i>
                        Seçimi Temizle
                    </button>
                </div>
            </div>
        </div>

        <!-- Ürün Listesi (Tablo Stili) -->
        <div class="product-table-container" id="productTableContainer">
            <!-- Professional Table Loading State -->
            <div class="table-loading" id="tableLoading" style="display: none;">
                <div class="loading-content">
                    <i class="fas fa-spinner fa-spin"></i>
                    <span>Ürünler yükleniyor...</span>
                </div>
            </div>
            <table class="product-table" id="productTable">
                <thead>
                    <tr>
                        <th class="product-select-col">
                            <input type="checkbox" id="selectAll" title="Tümünü Seç/Bırak" style="width: 18px; height: 18px; accent-color: rgb(0, 123, 255);">
                        </th>
                        <th class="product-image-col">Görsel</th>
                        <th class="product-name-col">Ürün Adı</th>
                        <th class="product-category-col">Kategori</th>
                        <th class="product-brand-col">Marka</th>
                        <th class="product-sku-col">SKU</th>
                        <th class="product-ean-col">EAN Kodu</th>
                        <th class="product-updated-col">Son Güncelleme</th>
                        <th class="product-status-col">Durum</th>
                        <th class="product-actions-col">İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr class="product-row" data-product-id="@product.Id">
                            <td class="product-select-cell">
                                <input type="checkbox" class="product-checkbox" name="selectedProducts" value="@product.Id" data-product-name="@product.Name">
                            </td>
                            <td class="product-image-cell">
                                @if (!string.IsNullOrEmpty(product.MarketplaceImageUrls?.FirstOrDefault()))
                                {
                                    <img src="@product.MarketplaceImageUrls.FirstOrDefault()" 
                                         alt="@product.Name" 
                                         class="product-thumbnail clickable-image marketplace-image" 
                                         data-action="open-gallery"
                                         data-product-id="@product.Id"
                                         data-product-name="@Html.Raw(Html.Encode(product.Name))"
                                         data-images="@string.Join("|", product.MarketplaceImageUrls.Take(10))"
                                         title="Pazaryeri görsellerini görmek için tıklayın (@(product.MarketplaceImageUrls.Count) görsel)" />
                                    @if (product.MarketplaceImageUrls.Count > 1)
                                    {
                                        <div class="image-count-badge">@(product.MarketplaceImageUrls.Count)</div>
                                    }
                                }
                                else if (!string.IsNullOrEmpty(product.ImageUrls?.FirstOrDefault()) || !string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="@(product.ImageUrls?.FirstOrDefault() ?? product.ImageUrl)" 
                                         alt="@product.Name" 
                                         class="product-thumbnail clickable-image" 
                                         data-action="open-image"
                                         data-image-url="@(product.ImageUrls?.FirstOrDefault() ?? product.ImageUrl)"
                                         data-product-name="@Html.Raw(Html.Encode(product.Name))"
                                         title="Büyük görüntülemek için tıklayın" />
                                }
                                else
                                {
                                    <div class="no-image-small">📷</div>
                                }
                            </td>
                            <td class="product-name-cell">
                                <div class="product-name">@product.Name</div>
                            </td>
                            <td class="product-category-cell">
                                @if (!string.IsNullOrEmpty(product.Category))
                                {
                                    <span class="category-badge">@product.Category</span>
                                }
                                else
                                {
                                    <span class="no-category">Kategori yok</span>
                                }
                            </td>
                            <td class="product-brand-cell">@product.Brand</td>
                            <td class="product-sku-cell"><code>@product.SKU</code></td>
                            <td class="product-ean-cell">
                                @if (!string.IsNullOrEmpty(product.EanCode))
                                {
                                    <code>@product.EanCode</code>
                                }
                                else
                                {
                                    <span class="no-ean">-</span>
                                }
                            </td>
                            <td class="product-updated-cell">
                                @{
                                    // Professional TimeZone Handling - Using Helper Methods for Consistency
                                    var utcDate = product.UpdatedDate ?? product.CreatedDate;
                                    var displayDate = utcDate.ToTurkeyTime();
                                    var nowTurkey = DateTime.UtcNow.ToTurkeyTime();
                                    var turkeyTimeString = utcDate.ToTurkeyTimeString("dd.MM.yyyy HH:mm");
                                    
                                    var isToday = displayDate.Date == nowTurkey.Date;
                                    var isYesterday = displayDate.Date == nowTurkey.Date.AddDays(-1);
                                    var isThisWeek = displayDate >= nowTurkey.Date.AddDays(-7);
                                }
                                
                                <div class="updated-date-container">
                                    @if (isToday)
                                    {
                                        <span class="updated-today" title="@turkeyTimeString (Türkiye Saati)&#10;Son güncelleme: @((nowTurkey - displayDate).TotalMinutes < 60 ? Math.Round((nowTurkey - displayDate).TotalMinutes) + " dakika önce" : Math.Round((nowTurkey - displayDate).TotalHours) + " saat önce")">
                                            🕐 Bugün @displayDate.ToString("HH:mm")
                                        </span>
                                    }
                                    else if (isYesterday)
                                    {
                                        <span class="updated-yesterday" title="@turkeyTimeString (Türkiye Saati)&#10;@((nowTurkey - displayDate).TotalHours < 48 ? Math.Round((nowTurkey - displayDate).TotalHours) + " saat önce" : "Dün")">
                                            📅 Dün @displayDate.ToString("HH:mm")
                                        </span>
                                    }
                                    else if (isThisWeek)
                                    {
                                        <span class="updated-week" title="@turkeyTimeString (Türkiye Saati)">
                                            📆 @displayDate.ToString("dd.MM HH:mm")
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="updated-old" title="@turkeyTimeString (Türkiye Saati)">
                                            📋 @displayDate.ToString("dd.MM.yyyy")
                                        </span>
                                    }
                                </div>
                            </td>
                            <td class="product-status-cell">
                                @if (product.IsArchived)
                                {
                                    <span class="status-badge archived">🗄️ Arşiv</span>
                                }
                                else
                                {
                                    <span class="status-badge active">✅ Aktif</span>
                                }
                            </td>
                            <td class="product-actions-cell">
                                <div class="action-buttons-inline">
                                    <a href="@Url.Action("Details", "Product", new { id = product.Id })" class="btn-small btn-primary" title="Detaylar">👁️</a>
                                    @if (isArchivePage)
                                    {
                                        <button type="button" class="btn-small btn-success" title="Arşivden Çıkar" data-action="unarchive-product" data-product-id="@product.Id" data-product-name="@product.Name">📤</button>
                                        <button type="button" class="btn-small btn-danger" title="Kalıcı Sil" data-action="delete-product" data-product-id="@product.Id" data-product-name="@product.Name">🗑️</button>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("EditProduct", "Product", new { id = product.Id })" class="btn-small btn-warning" title="Düzenle">✏️</a>
                                        <button type="button" class="btn-small btn-info" title="Arşivle" data-action="archive-product" data-product-id="@product.Id" data-product-name="@product.Name">📥</button>
                                        <button type="button" class="btn-small btn-danger" title="Sil" data-action="delete-product" data-product-id="@product.Id" data-product-name="@product.Name">🗑️</button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Sayfalama -->
        @if (totalPages > 1)
        {
            var actionName = isArchivePage ? "Archive" : "Index";
            <div class="pagination-container">
                <div class="pagination-info">
                    Sayfa @currentPage / @totalPages (@totalCount ürün)
                </div>
                <div class="pagination-buttons">
                    @if (currentPage > 1)
                    {
                        <a href="@Url.Action(actionName, new { page = 1, pageSize, search, category, brand })" class="btn btn-outline">İlk</a>
                        <a href="@Url.Action(actionName, new { page = currentPage - 1, pageSize, search, category, brand })" class="btn btn-outline">← Önceki</a>
                    }
                    
                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                    {
                        if (i == currentPage)
                        {
                            <span class="btn btn-primary page-current">@i</span>
                        }
                        else
                        {
                            <a href="@Url.Action(actionName, new { page = i, pageSize, search, category, brand })" class="btn btn-outline">@i</a>
                        }
                    }
                    
                    @if (currentPage < totalPages)
                    {
                        <a href="@Url.Action(actionName, new { page = currentPage + 1, pageSize, search, category, brand })" class="btn btn-outline">Sonraki →</a>
                        <a href="@Url.Action(actionName, new { page = totalPages, pageSize, search, category, brand })" class="btn btn-outline">Son</a>
                    }
                </div>
            </div>
        }
    }
</div>

<style>
/* GLOBAL UTILITY CLASSES - JavaScript manipulation için */
.hidden {
    display: none !important;
    max-height: 0 !important;
    opacity: 0 !important;
    overflow: hidden !important;
}

/* İstatistik Kartları */
.stats-section {
    margin-bottom: 25px;
}

.stats-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 15px;
    margin-bottom: 20px;
}

.stat-card {
    background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border: 1px solid #e9ecef;
    display: flex;
    align-items: center;
    gap: 15px;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.stat-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: transparent;
    transition: width 0.3s ease;
}

.stat-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
}

.stat-card:hover::before {
    width: 8px;
}

/* Remove blue border from primary stat cards using higher specificity */
.container.product-index-page .stat-card.primary::before {
    display: none;
    background: transparent;
    width: 0;
}

.stat-icon {
    width: 50px;
    height: 50px;
    background: linear-gradient(135deg, #007bff, #0056b3);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 1.5em;
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
}

.stat-content h3 {
    font-size: 2em;
    font-weight: 700;
    margin: 0;
    color: #2c3e50;
    line-height: 1;
}

.stat-content p {
    margin: 5px 0 0 0;
    color: #6c757d;
    font-weight: 500;
    font-size: 0.9em;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

/* Gelişmiş Arama ve Filtreleme */
.search-filter-section {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 30px;
    border-radius: 15px;
    margin-bottom: 30px;
    border: 1px solid #dee2e6;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
}

.search-filter-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 25px;
    border-radius: 10px;
}

.search-filter-header h3 {
    margin: 0;
    color: #1a202c;
    font-size: 1.4em;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 12px;
}

.btn-toggle-advanced {
    background: linear-gradient(135deg, #007bff, #0056b3);
    border: 1px solid white;
    color: white;
    padding: 10px 20px;
    border-radius: 10px;
    cursor: pointer;
    font-size: 0.9em;
    font-weight: 500;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 123, 255, 0.2);
}

.btn-toggle-advanced:hover {
    background: linear-gradient(135deg, #0056b3, #004085);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
}

.search-main {
    display: flex;
    gap: 20px;
    margin-bottom: 25px;
    align-items: flex-start;
}

.search-box {
    flex: 1;
    position: relative;
}

.search-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
    font-size: 18px;
    z-index: 2;
}

.search-input {
    width: 100%;
    padding: 15px 20px 15px 50px;
    border: 2px solid #dee2e6;
    border-radius: 10px;
    font-size: 16px;
    box-sizing: border-box;
    transition: all 0.3s ease;
    background: white;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.search-input:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.search-input::placeholder {
    color: #6c757d;
    font-style: italic;
}

/* HIGH SPECIFICITY CONTAINER-SCOPED SEARCH ACTIONS - Clean Version */
.container.product-index-page .search-actions {
    display: flex;
    gap: 12px;
    flex-shrink: 0;
    align-items: center;
}

.container.product-index-page .search-actions .btn {
    padding: 15px 25px;
    border-radius: 8px;
    font-weight: 500;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    text-decoration: none;
    box-shadow: 0 2px 8px rgba(0, 123, 255, 0.1);
}

.container.product-index-page .search-actions .btn-primary {
    background: linear-gradient(135deg, #007bff, #0056b3);
    color: white;
    border: 2px solid transparent;
    box-shadow: 0 2px 8px rgba(0, 123, 255, 0.2);
}

.container.product-index-page .search-actions .btn-primary:hover {
    background: linear-gradient(135deg, #0056b3, #004085);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
}

.container.product-index-page .search-actions .btn-outline {
    background: white;
    color: #6c757d;
    border: 2px solid #dee2e6;
    text-decoration: none;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);
}

.container.product-index-page .search-actions .btn-outline:hover {
    background: #f8f9fa;
    border-color: #adb5bd;
    color: #495057;
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.filter-options {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
}

.filter-group {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.filter-group label {
    font-size: 0.9em;
    font-weight: 600;
    color: #495057;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.filter-select, .filter-input {
    padding: 12px 15px;
    border: 2px solid #dee2e6;
    border-radius: 8px;
    background: white;
    font-size: 14px;
    transition: all 0.3s ease;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.filter-select:focus, .filter-input:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.advanced-filters {
    background: rgba(0, 123, 255, 0.03);
    border-radius: 12px;
    padding: 25px;
    margin-top: 20px;
    border: 1px solid rgba(0, 123, 255, 0.1);
    transition: all 0.3s ease;
    overflow: hidden;
    max-height: 1000px;
    opacity: 1;
}

/* Advanced filters artık global .hidden utility sınıfını kullanıyor */

.advanced-filter-row {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
}

.advanced-filter-row:last-child {
    margin-bottom: 0;
}

.range-inputs {
    display: flex;
    align-items: center;
    gap: 10px;
}

.range-input {
    flex: 1;
    min-width: 0;
}

.range-separator {
    color: #6c757d;
    font-weight: 500;
}

.checkbox-group {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.checkbox-label {
    display: flex;
    align-items: center;
    gap: 8px;
    cursor: pointer;
    font-size: 14px;
    color: #495057;
}

.container.product-index-page .checkbox-label input[type="checkbox"] {
    width: 18px;
    height: 18px;
    accent-color: #007bff;
    cursor: pointer;
}

.search-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #dee2e6;
    border-top: none;
    border-radius: 0 0 10px 10px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    max-height: 250px;
    overflow-y: auto;
}

.search-suggestions.hidden {
    display: none;
}

.suggestion-item {
    padding: 12px 15px;
    cursor: pointer;
    border-bottom: 1px solid #f8f9fa;
    transition: background-color 0.2s ease;
    display: flex;
    align-items: center;
    gap: 10px;
}

.suggestion-item:hover {
    background-color: #f8f9fa;
}

.suggestion-item:last-child {
    border-bottom: none;
}

.suggestion-item i {
    color: #6c757d;
    width: 16px;
}

/* Animasyonlar */
@@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.stats-cards .stat-card:nth-child(1) { animation: slideInUp 0.6s ease 0.1s both; }
.stats-cards .stat-card:nth-child(2) { animation: slideInUp 0.6s ease 0.2s both; }
.stats-cards .stat-card:nth-child(3) { animation: slideInUp 0.6s ease 0.3s both; }
.stats-cards .stat-card:nth-child(4) { animation: slideInUp 0.6s ease 0.4s both; }

/* Product Form Header */
.product-form-header {
    background: linear-gradient(135deg, #2c3e50 0%, #34495e 50%, #2c3e50 100%);
    color: white;
    text-align: center;
    padding: 40px 30px;
    margin-bottom: 32px;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    position: relative;
    overflow: hidden;
}

.product-form-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.05) 0%, transparent 50%, rgba(255, 255, 255, 0.05) 100%);
    pointer-events: none;
}

.product-form-header .page-title {
    font-size: 2.2em;
    font-weight: 700;
    margin-bottom: 12px;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
}

.product-form-header .page-title i {
    font-size: 1.1em;
    color: #3498db;
    text-shadow: 0 2px 10px rgba(52, 152, 219, 0.5);
}

.product-form-header .page-subtitle {
    font-size: 1.1em;
    opacity: 0.9;
    margin: 0;
    font-weight: 300;
    letter-spacing: 0.5px;
}

/* Header - Eski stiller kaldırıldı */
.header-section {
    display: none; /* Eski header stili artık kullanılmıyor */
}

/* Bulk Actions */
.bulk-actions-panel {
    background: linear-gradient(135deg, #212529 0%, #343a40 100%);
    color: white;
    padding: 15px 20px;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.3);
    display: none;
    position: relative;
    z-index: 10;
    opacity: 0;
    transform: translateY(-10px);
    transition: all 0.3s ease;
    min-height: auto;
    overflow: visible;
}

.container.product-index-page .bulk-actions-panel.show {
    display: block;
    opacity: 1;
    transform: translateY(0);
}

.container.product-index-page .bulk-actions-panel[style*="display: block"] {
    display: block;
    opacity: 1;
    transform: translateY(0);
}

.bulk-actions-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 15px;
}

.selected-count {
    font-weight: bold;
    font-size: 16px;
    color: white;
    margin: 0;
}

.bulk-buttons {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
}

.bulk-buttons .btn {
    padding: 8px 16px;
    border: 1px solid rgba(255,255,255,0.2);
    background: rgba(255,255,255,0.1);
    color: white;
    border-radius: 6px;
    transition: all 0.3s ease;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    gap: 5px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    backdrop-filter: blur(5px);
}

.bulk-buttons .btn:hover {
    background: rgba(255,255,255,0.2);
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    border-color: rgba(255,255,255,0.4);
}

.bulk-buttons .btn:active {
    transform: translateY(0);
}

.bulk-buttons .btn-success {
    background: linear-gradient(135deg, #28a745, #20c997);
    border-color: #28a745;
    color: white;
}

.bulk-buttons .btn-success:hover {
    background: linear-gradient(135deg, #218838, #1aa179);
    border-color: #1e7e34;
}

.bulk-buttons .btn-warning {
    background: linear-gradient(135deg, #ffc107, #fd7e14);
    border-color: #ffc107;
    color: #212529;
    font-weight: 600;
}

.bulk-buttons .btn-warning:hover {
    background: linear-gradient(135deg, #e0a800, #e8670e);
    border-color: #d39e00;
}

.container.product-index-page .bulk-buttons .btn-secondary {
    background: linear-gradient(135deg, #6c757d, #495057);
    border-color: #6c757d;
    color: white;
}

.container.product-index-page .bulk-buttons .btn-secondary:hover {
    background: linear-gradient(135deg, #5a6268, #3d4448);
    border-color: #545b62;
}

.bulk-buttons .btn-info {
    background: linear-gradient(135deg, #17a2b8, #6f42c1);
    border-color: #17a2b8;
    color: white;
}

.bulk-buttons .btn-info:hover {
    background: linear-gradient(135deg, #138496, #5a2d91);
    border-color: #117a8b;
}

.bulk-buttons .btn-danger {
    background: linear-gradient(135deg, #dc3545, #e83e8c);
    border-color: #dc3545;
    color: white;
}

.bulk-buttons .btn-danger:hover {
    background: linear-gradient(135deg, #c82333, #d91a72);
    border-color: #bd2130;
}

.bulk-buttons .btn-outline {
    background: transparent;
    border: 2px solid rgba(255,255,255,0.7);
    color: white;
    font-weight: 600;
}

.bulk-buttons .btn-outline:hover {
    background: rgba(255,255,255,0.15);
    border-color: rgba(255,255,255,0.9);
    color: white;
}

@@keyframes slideInDown {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

/* Hücre içerik stilleri */
.product-thumbnail {
    width: 50px;
    height: 50px;
    aspect-ratio: 1 / 1;
    object-fit: cover;
    object-position: center;
    border-radius: 6px;
    border: 2px solid #e1e8ed;
    display: block;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    background: #f8f9fa;
}

.clickable-image {
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.clickable-image:hover {
    transform: scale(0.95);
    box-shadow: 0 3px 8px rgba(0, 123, 255, 0.3);
    border-color: #007bff;
    z-index: 2;
}

.clickable-image::after {
    content: '🔍';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: 6px;
}

.clickable-image:hover::after {
    opacity: 1;
}

/* Image count badge */
.product-image-cell {
    position: relative;
    overflow: hidden;
    width: 60px;
    height: 60px;
    padding: 5px;
    vertical-align: middle;
    text-align: center;
}

.image-count-badge {
    position: absolute;
    top: 2px;
    right: 2px;
    background: #007bff;
    color: white;
    font-size: 10px;
    padding: 2px 4px;
    border-radius: 8px;
    font-weight: bold;
    line-height: 1;
    min-width: 16px;
    text-align: center;
    box-shadow: 0 1px 3px rgba(0,0,0,0.3);
    z-index: 5;
}

.no-image-small {
    width: 50px;
    height: 50px;
    background: #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    color: #999;
    font-size: 1.2em;
}

.product-name {
    font-weight: 600;
    color: #333;
    margin-bottom: 5px;
    line-height: 1.4;
}

.category-badge {
    background: #007bff;
    color: white;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 0.8em;
    font-weight: 500;
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.no-category {
    color: #999;
    font-style: italic;
    font-size: 0.9em;
}

.product-sku-cell code {
    background: #f8f9fa;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.9em;
    color: #495057;
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.product-ean-cell code {
    background: #e3f2fd;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.9em;
    color: #1976d2;
    display: inline-block;
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.no-ean {
    color: #999;
    font-style: italic;
}

/* Status badges */
.status-badge {
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 11px;
    font-weight: bold;
    text-align: center;
    white-space: nowrap;
    display: inline-block;
}

.status-badge.active {
    background: linear-gradient(135deg, #28a745, #20c997);
    color: white;
}

/* Product selection */
.product-select-col {
    width: 50px;
    text-align: center;
    padding: 8px 4px;
}

.product-select-cell {
    text-align: center;
    padding: 8px 4px;
    vertical-align: middle;
}

.product-status-col {
    width: 80px;
    text-align: center;
}

.product-status-cell {
    text-align: center;
    padding: 8px;
}

.product-checkbox {
    cursor: pointer;
    transform: scale(1.3);
    margin: 0;
    padding: 0;
    opacity: 1;
    visibility: visible;
    position: relative;
    z-index: 1;
}

.product-checkbox:checked {
    background-color: #007bff;
    border-color: #007bff;
}

.product-checkbox:focus {
    outline: 2px solid #007bff;
    outline-offset: 2px;
}

/* Select all checkbox */
#selectAll {
    cursor: pointer;
    transform: scale(1.3);
    margin: 0;
    padding: 0;
    opacity: 1;
    visibility: visible;
    position: relative;
    z-index: 1;
}

#selectAll:checked {
    background-color: #007bff;
    border-color: #007bff;
}

#selectAll:indeterminate {
    background-color: #ffc107;
    border-color: #ffc107;
}

#selectAll:focus {
    outline: 2px solid #007bff;
    outline-offset: 2px;
}

/* Arama ve Filtre */
.search-filter-section {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 25px;
    border-radius: 12px;
    margin-bottom: 25px;
    border: 1px solid #dee2e6;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.search-box {
    margin-bottom: 20px;
    position: relative;
}

.search-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
    font-size: 18px;
    z-index: 2;
}

.search-box input {
    width: 100%;
    padding: 15px 20px 15px 50px;
    border: 2px solid #dee2e6;
    border-radius: 8px;
    font-size: 16px;
    box-sizing: border-box;
    transition: all 0.3s ease;
    background: white;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.search-box input:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

.search-box input::placeholder {
    color: #6c757d;
    font-style: italic;
}

.filter-options {
    display: flex;
    gap: 15px;
    align-items: center;
    flex-wrap: wrap;
}

.filter-options select {
    padding: 12px 15px;
    border: 2px solid #dee2e6;
    border-radius: 6px;
    background: white;
    min-width: 160px;
    font-size: 14px;
    transition: all 0.3s ease;
}

.filter-options select:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
}

/* Tablo Stilleri */
.product-table-container {
    background: white;
    border-radius: 12px;
    overflow-x: auto;
    overflow-y: visible;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    border: 1px solid #e9ecef;
    min-width: 100%;
}

.product-table {
    width: 100%;
    min-width: 1200px;
    border-collapse: collapse;
    table-layout: fixed;
}

.product-table thead {
    background: linear-gradient(135deg, #343a40 0%, #495057 100%);
    color: white;
}

.product-table th {
    padding: 16px 12px;
    text-align: left;
    font-weight: 600;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.product-table td {
    padding: 14px 12px;
    border-bottom: 1px solid #f0f0f0;
    vertical-align: middle;
}

.product-table tbody tr {
    transition: all 0.3s ease;
}

.product-table tbody tr:hover {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}
    padding: 15px 10px;
    text-align: left;
    font-weight: 600;
    font-size: 14px;
}

.product-table tbody tr {
    border-bottom: 1px solid #eee;
    transition: background-color 0.2s;
}

.product-table tbody tr:hover {
    background-color: #f8f9fa;
}

.product-table td {
    padding: 12px 10px;
    vertical-align: middle;
}

/* Sütun Genişlikleri */
.product-select-col { width: 40px; min-width: 40px; }
.product-image-col { width: 60px; min-width: 60px; }
.product-name-col { width: 25%; min-width: 200px; }
.product-category-col { width: 15%; min-width: 120px; }
.product-brand-col { width: 12%; min-width: 100px; }
.product-sku-col { width: 10%; min-width: 90px; }
.product-ean-col { width: 12%; min-width: 100px; }
.product-status-col { width: 8%; min-width: 80px; }
.product-actions-col { width: 18%; min-width: 140px; }

/* Hücre Stilleri */
/* Hücre Stilleri */
.product-table td {
    padding: 12px 10px;
    border-bottom: 1px solid #f0f0f0;
    vertical-align: middle;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.product-table th {
    padding: 16px 12px;
    text-align: left;
    font-weight: 600;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/* Uzun metinler için özel durumlar - higher specificity */
.container.product-index-page .product-name-cell {
    white-space: normal;
    word-wrap: break-word;
    max-width: 0;
}

.container.product-index-page .product-actions-cell {
    white-space: nowrap;
}

.no-image-small {
    width: 50px;
    height: 50px;
    background: #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    color: #999;
    font-size: 1.2em;
}

.product-name {
    font-weight: 600;
    color: #333;
    margin-bottom: 5px;
    font-size: 1.05em;
}

.category-badge {
    background: #007bff;
    color: white;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 0.8em;
    font-weight: 500;
}

.no-category {
    color: #999;
    font-style: italic;
}

.product-sku-cell code {
    background: #f8f9fa;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.9em;
    color: #495057;
}

.product-ean-cell code {
    background: #e3f2fd;
    padding: 2px 6px;
    border-radius: 3px;
    font-size: 0.9em;
    color: #1976d2;
}

.no-ean {
    color: #999;
    font-style: italic;
}

/* Küçük Butonlar */
.action-buttons-inline {
    display: flex;
    gap: 5px;
    flex-wrap: nowrap;
    justify-content: flex-start;
    overflow: hidden;
}

.btn-small {
    padding: 4px 8px;
    border: none;
    border-radius: 3px;
    text-decoration: none;
    font-size: 0.8em;
    cursor: pointer;
    transition: all 0.2s;
    min-width: 28px;
    height: 28px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.btn-primary { background: #007bff; color: white; }
.btn-warning { background: #ffc107; color: #212529; }
.btn-danger { background: #dc3545; color: white; }
.btn-info { background: #17a2b8; color: white; }
.btn-primary:hover { background: #0056b3; }
.btn-warning:hover { background: #e0a800; }
.btn-danger:hover { background: #c82333; }
.btn-info:hover { background: #138496; }

/* HIGH SPECIFICITY CONTAINER-SCOPED BUTTONS - Updated for Consistency */
.container.product-index-page .btn {
    padding: 12px 24px;  /* Consistent with global .btn */
    border: 2px solid transparent;
    border-radius: 8px;  /* Unified radius */
    text-decoration: none;
    cursor: pointer;
    font-weight: 500;
    display: inline-flex;  /* Consistent with global .btn */
    align-items: center;
    justify-content: center;
    gap: 8px;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
}

.container.product-index-page .btn-primary { background-color: #007bff; color: white; border-color: #007bff; }
.container.product-index-page .btn-secondary { background-color: #6c757d; color: white; border-color: #6c757d; }
.container.product-index-page .btn-success { background-color: #28a745; color: white; border-color: #28a745; }
.container.product-index-page .btn-info { background-color: #17a2b8; color: white; border-color: #17a2b8; }
.container.product-index-page .btn-outline { 
    background: transparent; 
    color: #6c757d; 
    border: 2px solid #6c757d;  /* Consistent border width */
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);
}
.container.product-index-page .btn-large { padding: 18px 36px; font-size: 1.1em; }  /* Proportional scaling */

/* Özel Kategori Yönetimi Butonu */
.btn-category-mgmt { 
    background: linear-gradient(135deg, #28a745, #20c997); 
    color: white;
    border: 2px solid transparent;
    font-weight: 600;
    position: relative;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(40, 167, 69, 0.2);
}

.btn-category-mgmt:hover { 
    background: linear-gradient(135deg, #218838, #1e7e34);
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
}

.btn-category-mgmt::before {
    content: '⚡';
    position: absolute;
    top: -3px;
    right: -3px;
    font-size: 0.7em;
    opacity: 0.8;
    animation: sparkle 2s infinite;
}

/* Keyframes moved to proper location */

.container.product-index-page .btn:hover { transform: translateY(-1px); }
.container.product-index-page .btn-primary:hover { background-color: #0056b3; }
.container.product-index-page .btn-secondary:hover { background-color: #545b62; }
.container.product-index-page .btn-success:hover { background-color: #1e7e34; }
.container.product-index-page .btn-info:hover { background-color: #138496; }
.container.product-index-page .btn-outline:hover { background-color: #6c757d; color: white; }

/* Pagination */
.pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 30px 0;
    gap: 20px;
}

.pagination-info {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 14px;
    color: #495057;
    border: 1px solid #dee2e6;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.pagination-buttons {
    display: flex;
    gap: 8px;
    align-items: center;
}

.pagination-buttons .btn {
    padding: 10px 16px;
    border: 2px solid #dee2e6;
    border-radius: 6px;
    background: white;
    color: #495057;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    min-width: 44px;
    text-align: center;
}

.pagination-buttons .btn:hover {
    background: #007bff;
    border-color: #007bff;
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0, 123, 255, 0.2);
}

.pagination-buttons .btn.page-current {
    background: #007bff;
    border-color: #007bff;
    color: white;
}

.pagination-buttons .btn-outline {
    background: var(--white);
    color: var(--secondary-color);
    border: 2px solid #dee2e6;
}

.pagination-buttons .btn-outline:hover {
    background: var(--secondary-color);
    border-color: var(--secondary-color);
    color: var(--white);
}

.pagination-buttons .btn-primary {
    background: #007bff;
    border-color: #007bff;
    color: white;
}

/* Sayfa Bilgisi */
.pagination-info {
    text-align: center;
    margin-top: 20px;
    color: #666;
    font-size: 0.9em;
}

/* Empty State */
.empty-state {
    text-align: center;
    padding: 60px 20px;
    background-color: #f8f9fa;
    border-radius: 10px;
    margin: 50px 0;
}

.empty-icon {
    font-size: 4rem;
    color: #6c757d;
    margin-bottom: 20px;
    opacity: 0.7;
}

.empty-state h2 {
    color: #6c757d;
    margin-bottom: 15px;
}

.empty-state p {
    color: #6c757d;
    margin-bottom: 30px;
    font-size: 1.1em;
    line-height: 1.5;
}

/* Arama sonucu bulunamadı durumu */
.no-results {
    background: linear-gradient(135deg, #fff3cd, #ffeaa7);
    border: 1px solid #ffeaa7;
}

.no-results h2 {
    color: #856404;
}

.no-results p {
    color: #856404;
}

.no-results-actions {
    display: flex;
    gap: 15px;
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: 30px;
}

.search-help-suggestions {
    background: white;
    padding: 20px;
    border-radius: 8px;
    margin-top: 30px;
    text-align: left;
    max-width: 400px;
    margin-left: auto;
    margin-right: auto;
    border: 1px solid #dee2e6;
}

.search-help-suggestions h4 {
    color: #495057;
    margin-bottom: 15px;
    text-align: center;
}

.search-help-suggestions ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.search-help-suggestions li {
    padding: 8px 0;
    color: #6c757d;
    border-bottom: 1px solid #f8f9fa;
}

.search-help-suggestions li:before {
    content: "✓ ";
    color: #28a745;
    font-weight: bold;
    margin-right: 8px;
}

.search-help-suggestions li:last-child {
    border-bottom: none;
}

/* Empty actions */
.empty-actions {
    display: flex;
    gap: 15px;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 20px;
}

/* Responsive */
@@media (max-width: 768px) {
    .container {
        width: 98%;
        padding: 10px;
    }
    
    .search-filter-section {
        padding: 20px;
    }
    
    .search-main {
        flex-direction: column;
        gap: 15px;
    }
    
    .container.product-index-page .search-actions {
        width: 100%;
        justify-content: stretch;
    }
    
    .container.product-index-page .search-actions .btn {
        flex: 1;
        justify-content: center;
    }
    
    .filter-options {
        grid-template-columns: 1fr;
        gap: 15px;
    }
    
    .advanced-filter-row {
        grid-template-columns: 1fr;
        gap: 15px;
    }
    
    .range-inputs {
        flex-direction: column;
        gap: 8px;
    }
    
    .range-separator {
        display: none;
    }
    
    .checkbox-group {
        flex-direction: row;
        flex-wrap: wrap;
        gap: 15px;
    }
    
    .stats-cards {
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
    }
    
    .stat-card {
        padding: 15px;
    }
    
    .stat-content h3 {
        font-size: 1.5em;
    }
    
    .product-form-header {
        padding: 20px 15px;
        margin-bottom: 20px;
    }
    
    .product-form-header .page-title {
        font-size: 1.8em;
    }
    
    .search-suggestions {
        max-height: 200px;
    }
    
    .search-suggestions.hidden {
        display: none;
    }
    
    .suggestion-item {
        padding: 10px 12px;
        font-size: 14px;
    }
}

@@media (max-width: 480px) {
    .search-filter-section {
        padding: 15px;
    }
    
    .search-filter-header {
        flex-direction: column;
        gap: 15px;
        align-items: stretch;
    }
    
    .search-filter-header h3 {
        font-size: 1.2em;
        text-align: center;
    }
    
    .btn-toggle-advanced {
        width: 100%;
        text-align: center;
    }
    
    .search-input {
        padding: 12px 15px 12px 45px;
        font-size: 14px;
    }
    
    .container.product-index-page .search-actions .btn {
        padding: 12px 20px;
        font-size: 13px;
    }
    
    .filter-select, .filter-input {
        padding: 10px 12px;
        font-size: 13px;
    }
    
    .advanced-filters {
        padding: 20px;
    }
    
    .stats-cards {
        grid-template-columns: 1fr;
    }
    
    .product-form-header .page-title {
        font-size: 1.5em;
        flex-direction: column;
        gap: 8px;
    }
    
    .bulk-actions-content {
        flex-direction: column;
        gap: 10px;
        text-align: center;
    }
    
    .bulk-buttons {
        justify-content: center;
        flex-wrap: wrap;
        gap: 8px;
    }
    
    .bulk-buttons .btn {
        padding: 6px 12px;
        font-size: 12px;
        min-width: 80px;
    }
    
    .product-select-col {
        width: 35px;
    }
    
    .product-checkbox, #selectAll {
        transform: scale(1.1);
    }
    
    .search-suggestions {
        max-height: 150px;
    }
    
    .search-suggestions.hidden {
        display: none;
    }
    
    .suggestion-item {
        padding: 8px 10px;
        font-size: 13px;
    }
}

/* Animasyonlar */
@@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@@keyframes slideInDown {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@@keyframes sparkle {
    0%, 100% { opacity: 0.8; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
}

.stats-cards .stat-card:nth-child(1) { animation: slideInUp 0.6s ease 0.1s both; }
.stats-cards .stat-card:nth-child(2) { animation: slideInUp 0.6s ease 0.2s both; }
.stats-cards .stat-card:nth-child(3) { animation: slideInUp 0.6s ease 0.3s both; }
.stats-cards .stat-card:nth-child(4) { animation: slideInUp 0.6s ease 0.4s both; }

/* Keyboard shortcuts help */
.keyboard-shortcuts-help {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 10px 15px;
    border-radius: 8px;
    font-size: 12px;
    z-index: 1000;
    display: none;
}

.keyboard-shortcuts-help.show {
    display: block;
    animation: slideInUp 0.3s ease;
}

/* Loading states */
.search-loading {
    position: relative;
}

.search-loading::after {
    content: '';
    position: absolute;
    top: 50%;
    right: 15px;
    width: 20px;
    height: 20px;
    border: 2px solid #007bff;
    border-top: 2px solid transparent;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Print Styles */
@@media print {
/* Print media specific rules - !important necessary for print override */
@@media print {
    .quick-actions-section,
    .search-filter-section,
    .bulk-actions-panel,
    .product-actions-col,
    .product-select-col {
        display: none !important;
    }
    
    .container {
        width: 100%;
        max-width: none;
        padding: 0;
    }
    
    .product-table {
        font-size: 10px;
    }
    
    .container.product-index-page .product-form-header {
        background: none !important;
        color: black !important;
        box-shadow: none !important;
    }
}
}

/* Simple Lightbox Styles - Like Details Page */
.lightbox {
    display: none;
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.9);
    backdrop-filter: blur(5px);
}

.lightbox-content {
    position: relative;
    width: 90%;
    height: 90%;
    margin: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    align-items: center;
    justify-content: center;
}

.lightbox-content img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    border-radius: 12px;
    box-shadow: 0 20px 60px rgba(0,0,0,0.5);
}

.lightbox-close {
    position: absolute;
    top: 20px;
    right: 30px;
    font-size: 2rem;
    color: white;
    cursor: pointer;
    z-index: 10000;
}

.lightbox-navigation {
    position: absolute;
    top: 50%;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 30px;
    transform: translateY(-50%);
}

.nav-btn {
    background: rgba(255,255,255,0.2);
    border: none;
    color: white;
    font-size: 1.5rem;
    padding: 15px 20px;
    border-radius: 50%;
    cursor: pointer;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
}

.nav-btn:hover {
    background: rgba(255,255,255,0.3);
    transform: scale(1.1);
}

.lightbox-counter {
    position: absolute;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    background: white;
    color: #000000;
    padding: 10px 20px;
    border-radius: 25px;
    border: 1px solid rgba(0,0,0,0.2);
    font-weight: 600;
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
}

/* Mobile responsive */
@@media (max-width: 768px) {
    .lightbox-content {
        width: 95%;
        height: 95%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .lightbox-close {
        top: 15px;
        right: 20px;
        font-size: 28px;
    }
    
    .lightbox-counter {
        bottom: 20px;
        padding: 8px 16px;
    }
    
    .nav-btn {
        width: 35px;
        height: 35px;
        font-size: 14px;
    }
}

@@media (max-width: 1024px) {
    .lightbox-content {
        width: 92%;
        height: 92%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
}
</style>

<!-- Include modular JavaScript in dependency order for better loading -->
<!-- 1. Utility classes first -->
<!-- JavaScript files are loaded via Scripts section only -->

<!-- Simple Image Lightbox Modal -->
<div id="imageLightbox" class="lightbox" onclick="closeLightbox()">
    <div class="lightbox-content">
        <span class="lightbox-close">&times;</span>
        <img id="lightboxImage" src="" alt="Ürün Görseli">
        <div class="lightbox-navigation">
            <button class="nav-btn prev-btn" onclick="event.stopPropagation(); navigateImage(-1)">
                <i class="fas fa-chevron-left"></i>
            </button>
            <button class="nav-btn next-btn" onclick="event.stopPropagation(); navigateImage(1)">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>
        <div class="lightbox-counter">
            <span id="lightboxCounter"></span>
        </div>
    </div>
</div>

<!-- All JavaScript functionality moved to product-index.js -->

<!-- CSRF token'ı sayfaya ekle -->
@Html.AntiForgeryToken()

@section Scripts {
    <!-- Load modules in dependency order - UNIFIED NOTIFICATION SYSTEM -->
    <!-- notification-system.js is already loaded in Layout.cshtml - no need to reload -->
    <script src="~/js/bulk-operations.js?v=2.7.0&t=@DateTime.UtcNow.Ticks"></script>
    <script src="~/js/advanced-search-clean.js?v=2.7.0&t=@DateTime.UtcNow.Ticks"></script>
    <script src="~/js/product-index.js?v=2.6.0&t=@DateTime.UtcNow.Ticks"></script>
    <script src="~/js/event-delegation.js?v=2.6.0&t=@DateTime.UtcNow.Ticks"></script>
    
    <script>
        // Professional Page Loading Management
        document.addEventListener('DOMContentLoaded', function() {
            // Simulate table loading (for form submissions and page refreshes)
            showTableLoading();
            
            // Hide loading after a short delay (table is already rendered)
            setTimeout(hideTableLoading, 300);
            
            // Handle form submissions with loading states
            const searchForm = document.getElementById('searchForm');
            if (searchForm) {
                searchForm.addEventListener('submit', function() {
                    showTableLoading();
                });
            }
        });
        
        function showTableLoading() {
            const loading = document.getElementById('tableLoading');
            const table = document.getElementById('productTable');
            if (loading && table) {
                loading.style.display = 'flex';
                table.style.opacity = '0.5';
            }
        }
        
        function hideTableLoading() {
            const loading = document.getElementById('tableLoading');
            const table = document.getElementById('productTable');
            if (loading && table) {
                loading.style.display = 'none';
                table.style.opacity = '1';
            }
        }

        // Global variables for lightbox
        let currentImages = [];
        let currentImageIndex = 0;

        // Lightbox Functions - Simple like Details page
        function openImageModal(imageSrc, productName) {
            if (!imageSrc || imageSrc.trim() === '') {
                console.warn('No image source provided');
                return;
            }

            currentImages = [imageSrc];
            currentImageIndex = 0;
            showLightbox();
        }

        function openMarketplaceGallery(productId, productName, imageUrls) {
            if (!imageUrls || imageUrls.length === 0) {
                console.warn('No images to display in gallery');
                return;
            }

            // Filter out empty or null URLs
            currentImages = imageUrls.filter(url => url && url.trim() !== '');
            
            if (currentImages.length === 0) {
                console.warn('No valid images to display in gallery');
                return;
            }

            currentImageIndex = 0;
            showLightbox();
        }

        function showLightbox() {
            const lightbox = document.getElementById('imageLightbox');
            const lightboxImage = document.getElementById('lightboxImage');
            const counter = document.getElementById('lightboxCounter');
            
            if (lightbox && lightboxImage && counter) {
                // Professional loading state
                lightboxImage.style.opacity = '0.5';
                lightboxImage.style.filter = 'blur(2px)';
                counter.innerHTML = '⏳ Yükleniyor...';
                
                // Create loading spinner if not exists
                let spinner = lightbox.querySelector('.loading-spinner');
                if (!spinner) {
                    spinner = document.createElement('div');
                    spinner.className = 'loading-spinner';
                    spinner.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                    spinner.style.cssText = `
                        position: absolute;
                        top: 50%;
                        left: 50%;
                        transform: translate(-50%, -50%);
                        color: white;
                        font-size: 2rem;
                        z-index: 1001;
                    `;
                    lightbox.appendChild(spinner);
                }
                spinner.style.display = 'block';
                
                // Handle image load
                lightboxImage.onload = () => {
                    lightboxImage.style.opacity = '1';
                    lightboxImage.style.filter = 'none';
                    counter.textContent = (currentImageIndex + 1) + ' / ' + currentImages.length;
                    spinner.style.display = 'none';
                };
                
                // Handle image error
                lightboxImage.onerror = () => {
                    lightboxImage.style.opacity = '1';
                    lightboxImage.style.filter = 'none';
                    counter.innerHTML = '❌ Görsel yüklenemedi';
                    spinner.style.display = 'none';
                };
                
                lightboxImage.src = currentImages[currentImageIndex];
                lightbox.style.display = 'block';
                
                // Hide navigation if only one image
                const navButtons = document.querySelectorAll('.nav-btn');
                navButtons.forEach(btn => {
                    btn.style.display = currentImages.length > 1 ? 'block' : 'none';
                });
            }
        }

        function closeLightbox() {
            const lightbox = document.getElementById('imageLightbox');
            if (lightbox) {
                lightbox.style.display = 'none';
            }
        }

        function navigateImage(direction) {
            if (currentImages.length <= 1) return;
            
            currentImageIndex += direction;
            
            if (currentImageIndex < 0) {
                currentImageIndex = currentImages.length - 1;
            } else if (currentImageIndex >= currentImages.length) {
                currentImageIndex = 0;
            }
            
            updateLightboxDisplay();
        }

        function updateLightboxDisplay() {
            const lightboxImage = document.getElementById('lightboxImage');
            const counter = document.getElementById('lightboxCounter');
            const lightbox = document.getElementById('imageLightbox');
            
            if (lightboxImage && counter && lightbox) {
                // Professional loading state for navigation
                lightboxImage.style.opacity = '0.5';
                lightboxImage.style.filter = 'blur(2px)';
                counter.innerHTML = '⏳ Yükleniyor...';
                
                const spinner = lightbox.querySelector('.loading-spinner');
                if (spinner) {
                    spinner.style.display = 'block';
                }
                
                // Handle image load
                lightboxImage.onload = () => {
                    lightboxImage.style.opacity = '1';
                    lightboxImage.style.filter = 'none';
                    counter.textContent = (currentImageIndex + 1) + ' / ' + currentImages.length;
                    if (spinner) spinner.style.display = 'none';
                };
                
                // Handle image error
                lightboxImage.onerror = () => {
                    lightboxImage.style.opacity = '1';
                    lightboxImage.style.filter = 'none';
                    counter.innerHTML = '❌ Görsel yüklenemedi';
                    if (spinner) spinner.style.display = 'none';
                };
                
                lightboxImage.src = currentImages[currentImageIndex];
            }
        }

        // Keyboard navigation
        document.addEventListener('keydown', function(event) {
            const lightbox = document.getElementById('imageLightbox');
            if (lightbox && lightbox.style.display === 'block') {
                switch(event.key) {
                    case 'Escape':
                        closeLightbox();
                        break;
                    case 'ArrowLeft':
                        navigateImage(-1);
                        break;
                    case 'ArrowRight':
                        navigateImage(1);
                        break;
                }
            }
        });

        // Make functions globally available
        window.openImageModal = openImageModal;
        window.closeLightbox = closeLightbox;
        window.openMarketplaceGallery = openMarketplaceGallery;
        window.navigateImage = navigateImage;
    </script>
}